// Giroscopio
// César André Cifuentes Guzmán
// 21622

// Se incluyen las librerías para realizar la medición con el sensor
#include <Arduino.h>
#include "HX711.h"
#include <Wire.h>

// Declaración de variables para almacenar datos de sensores
float RateRoll, RatePitch, RateYaw;
float AccX, AccY, AccZ;
float AngleRoll, AnglePitch;
float AngleZ;
float LoopTimer;

// Función para obtener señales del giroscopio y acelerómetro
void gyro_signals(void) {
  // Configuración del sensor MPU6050 (dirección I2C 0x68)
  Wire.beginTransmission(0x68);
  Wire.write(0x1A);
  Wire.write(0x05);
  Wire.endTransmission();
  
  Wire.beginTransmission(0x68);
  Wire.write(0x1C);
  Wire.write(0x10);
  Wire.endTransmission();
  
  Wire.beginTransmission(0x68);
  Wire.write(0x3B);
  Wire.endTransmission(); 
  
  Wire.requestFrom(0x68, 6);
  int16_t AccXLSB = Wire.read() << 8 | Wire.read();
  int16_t AccYLSB = Wire.read() << 8 | Wire.read();
  int16_t AccZLSB = Wire.read() << 8 | Wire.read();
  
  Wire.beginTransmission(0x68);
  Wire.write(0x1B); 
  Wire.write(0x8);
  Wire.endTransmission();                                                   
  
  Wire.beginTransmission(0x68);
  Wire.write(0x43);
  Wire.endTransmission();
  
  Wire.requestFrom(0x68, 6);
  int16_t GyroX = Wire.read() << 8 | Wire.read();
  int16_t GyroY = Wire.read() << 8 | Wire.read();
  int16_t GyroZ = Wire.read() << 8 | Wire.read();
  
  // Cálculos de tasas de giro y aceleraciones
  RateRoll = (float)GyroX / 65.5;
  RatePitch = (float)GyroY / 65.5;
  RateYaw = (float)GyroZ / 65.5;
  AccX = ((float)AccXLSB / 4096) - 0.06;
  AccY = ((float)AccYLSB / 4096) + 0.02;
  AccZ = ((float)AccZLSB / 4096) + 0.05;

  // Cálculos de ángulos de inclinación
  AngleRoll = atan(AccY / sqrt(AccX * AccX + AccZ * AccZ)) * 1 / (3.142 / 180);
  AnglePitch = -atan(AccX / sqrt(AccY * AccY + AccZ * AccZ)) * 1 / (3.142 / 180);
  AngleZ = -atan(sqrt(AccY * AccY + AccX * AccX) / AccZ) * 1 / (3.142 / 180);
}

void setup() {
  // Configuración inicial
  Serial.begin(115200);
  pinMode(13, OUTPUT);
  digitalWrite(13, HIGH);
  Wire.setClock(400000);
  Wire.begin();
  delay(250);
  Wire.beginTransmission(0x68); 
  Wire.write(0x6B);
  Wire.write(0x00);
  Wire.endTransmission();
}

void loop() {
  // Obtener señales y mostrar datos
  gyro_signals();
  Serial.print("Acceleration X [g]= ");
  Serial.print(AccX);
  Serial.print(" Acceleration Y [g]= ");
  Serial.print(AccY);
  Serial.print(" Acceleration Z [g]= ");
  Serial.println(AccZ);

  Serial.print("Angle Roll: ");
  Serial.print(AngleRoll);
  Serial.print(" degrees, Angle Pitch: ");
  Serial.print(AnglePitch);
  Serial.print(" degrees, Angle Z: ");
  Serial.print(AngleZ);
  Serial.println(" degrees");  

  delay(5000);  // Esperar 5 segundos antes de la siguiente iteración
}
